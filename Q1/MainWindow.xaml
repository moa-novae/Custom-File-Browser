<Window x:Class="Q1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Q1"
        xmlns:entity="clr-namespace:Q1Entity;assembly=Q1Entity"
        mc:Ignorable="d"
        Title="MainWindow" 
        Height="450" Width="800"
        MinHeight="400" MinWidth="400">
    <DockPanel>

        <!--Toolbar showing different actions an user can take-->
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar ToolBarTray.IsLocked="True" >

                <Button ToolTip="View User" Command="{Binding UserBrowser.OpenViewUserWindowCommand}">
                    <Image Source="./images/view-user.png"/>
                </Button>
                <Button ToolTip="Add New User" Command="{Binding UserBrowser.OpenNewUserWindowCommand}">
                    <Image Source="./Images/add-user.png"/>
                </Button>
                <Button ToolTip="Edit User" Command="{Binding UserBrowser.OpenEditUserWindowCommand}">
                    <Image Source="./Images/edit-user.png"/>
                </Button>
                <Button ToolTip="Delete User" Command="{Binding UserBrowser.DeleteUserCommand}">
                    <Image Source="./Images/delete-user.png"/>
                </Button>
                <Button ToolTip="Delete User's Directory Item" Command="{Binding UserBrowser.DeleteUserDirectoryItemCommand}">
                    <Image Source="./Images/delete-user-directory-item.png"/>
                </Button>
                <Separator/>
                <Button ToolTip="Directory Item Properties" Command="{Binding FileBrowser.OpenEditDirectoryItemWindowCommand}">
                    <Image Source="./Images/edit.png"/>
                </Button>

            </ToolBar>
        </ToolBarTray>

        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>

            </Grid.ColumnDefinitions>

            <!--Tree view for browsing user and their owned items-->
            <TreeView 
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                x:Name="UserView" 
                ItemsSource="{Binding UserBrowser.AllUsers}">

                <!--The event triggers bind selected treeview item to UserBrowser view model-->
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding UserBrowser.SelectedItemChangedCommand}" CommandParameter="{Binding ElementName=UserView, Path=SelectedItem}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True"/>
                    </Style>
                </TreeView.ItemContainerStyle>

                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type entity:User}" ItemsSource="{Binding UserDirectoryItems}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Name}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type entity:UserDirectoryItem}">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="20" Margin="3" 
                                           Source="{Binding Type,
                                        Converter={x:Static local:HeaderToImageConverter.Instance}
                                        }"/>
                            <TextBlock Text="{Binding DirectoryItem.FullPath}" />
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>

            </TreeView>


            <DockPanel Grid.Column="1" 
                       ScrollViewer.VerticalScrollBarVisibility="Auto"
                       ScrollViewer.HorizontalScrollBarVisibility="Auto">

                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width ="*"/>
                        <ColumnDefinition Width ="Auto"/>
                        <ColumnDefinition Width ="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!--Search bar for file browser-->
                    <TextBox Margin="5" Grid.Column="0" Text="{Binding FileBrowser.SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Grid.Column="1" Width="50" Margin="0 0 10 0" Command="{Binding FileBrowser.SearchAllTreeNodesCommand}">
                        Search
                    </Button>
                    <Button Grid.Column="2" Width="50" Command="{Binding FileBrowser.ShowAllTreeNodesCommand}">
                        Clear
                    </Button>
                </Grid>
                   
                <!--Tree view for file browser-->
                <TreeView x:Name="FolderView" ItemsSource="{Binding FileBrowser.ChildViewModels}" BorderThickness="0">

                    <!--The interaction triggers bind selected treeview item to FileBrowser view model-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding FileBrowser.SelectedItemChangedCommand}" CommandParameter="{Binding ElementName=FolderView, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="20" Margin="3" 
                                           Source="{Binding Item.Type,
                                        Converter={x:Static local:HeaderToImageConverter.Instance}
                                        }"/>
                                <TextBlock Text="{Binding Item.Name}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>

                </TreeView>

            </DockPanel>

        </Grid>
    </DockPanel>
</Window>
